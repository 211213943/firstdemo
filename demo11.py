'''元组是python的内置数据结构之一，是一个不可变序列
不可变序列：字符串、元组   没有增，删，改的操作
可变序列：列表，字典  可以对字典执行增，删，改操作，对象地址不发生更改'''
#元组的创建方式  1.直接小括号 t=('python',5,'hello'),小括号可以省略不写 2.使用内置函数tuple()   t=tuple(('python',5,'hello'))
#3.只包含一个元素的元组需要使用逗号和小括号  t=(10,)

'''t=('python',5,'hello')
print(t)       #('python', 5, 'hello')
print(type(t))   #<class 'tuple'>

t1='python',55,22
print(t1)
print(type(t1))         

d=tuple(('python',5,'hello'))
print(d)  

t2=('python',)
print(t2)
print(type(t2))   #不加逗号t2的数据类型为字符串类型

#空元组的创建
t4=()
t5=tuple()
'''

'''将元组设计成不可变序列，可以在多任务环境下，同时操作对象时不需要加锁，元组中存储的是对象的引用
如果元组中存储的对象本身是不可变对象，则不能再引用其它对象。如果元组中的对象是可变对象，则可变对象的引用不允许改变
，但数据可以改变'''
t=(10,[20,30],40)
print(t)
print(type(t))
print(t[0],t[1],t[2])   #获取元组中的元素值  '''
'''由于[20,30]是列表，而列表是可变序列，所以可以向列表中添加元素，而列表的内存地址不变
t[1].append(100)   #向列表中添加元素
print(t)       (10, [20, 30, 100], 40) '''

'''元组的遍历，元组是可迭代对象，所以可以使用for...in进行遍历'''
t=tuple(('python',22,55))
for item in t:
    print(item)